npm i -D (dependencias de desenvolvimento)
typescript
@types/node (tipagem do node)
ts-node-dev (servidor para rodar a aplicação no ambiente de desenvolvimento)
tsconfig-paths (paths da aplicação)

# TSC Commandos

npx tsc --help (traz as opções)
npx tsc --init (cria o arquivo tsconfig)
npx tsc = vai compilar o codigo typescript em javascript no path dist

# Scripts

ts-node-dev -r tsconfig-paths/register = faz o ts node dev consiga interpretar subpaths que configuraremos no tsconfig
--inspect  = habilita o debug
--traspile-only = transpila o codigo ao invés de gerar a pasta dist
--ignore-watch node_modules  = ignora ficar observando a node modules
src/shared/http/server.ts

npm run dev = executa o commando

"build": "rimraf dist && npx tsc", = rimraf vai apagar a pasta dist e compilar o typescript novamente


# Biblioteca que apaga pasta dist atual e gera uma nova
npm i rimraf


# PACOTES PARA ESLINT

npm i -D eslint @typescript-eslint/eslint-plugin @typescript-eslint/parser prettier eslint-config-prettier eslint-plugin-prettier

npx eslint . (valida os erros)

npx eslint . --fix (concerta os erros)

# INSTALANDO O EXPRESS PARA GERENCIAR A CRIAÇÃO DE ROTAS E MIDDLEWARES E TRATAMENTO DE REQUISIÇÕES
npm i express express-async-errors( express-async-errors trata erros de requisições assincronas)

# instalando a tipagem do express como dependencia de desenvolvimento
npm i -D @types/express


# INSTALANDO O CORS
npm i cors

# instalando pacote de tipagem do cors
npm i -D @types/cors

# BIBLIOTECA PARA VARIAVEL DE AMBIENTE


# INSTALANDO SWAGGER E TIPAGEM
npm i swagger-ui-express

npm i -D @types/swagger-ui-express

# INSTALANDO O TYPE ORM (REFLECT É OBRIGATORIO PARA O TYPEORM) E O SQLITE (PARA A ESTRUTURA DO NODE ENTENDER O SQLITE)
npm install typeorm reflect-metadata sqlite3


# CRIANDO MIGRATIONS
➜  npm run typeorm migration:create src/shared/typeorm/migrations/CreateRolesTable

# RODANDO MIGRATION O -D = DATASOURCE PASSO O CAMINHO

➜  npm run typeorm -- -d ./src/shared/typeorm/index.ts migration:run


# INSTALANDO CELEBRATE PARA VALIDAR REQUISICOES DO CLIENT

npm i celebrate

# tipagem do joi que o celebrate utiliza
npm i -D @types/joi


# INSTALANDO TSYRING
# para que os repositories sejam injetado nos use cases como dependencia
npm i tsyringe


# INSTALANDO BCRYPT E TIPAGEM
npm i bcryptjs

npm i -D @types/bcryptjs